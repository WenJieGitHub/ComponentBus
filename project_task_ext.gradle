ext {
    floatingKitVersion = "0.0.1"
    componentBusVersion = "0.0.4"

    // 全部构建
    allBuild = true
    // allBuild = true 时生效，打包时忽略模块, local.properties 内若配置会替换当前配置
    ignorePackage = []
    // allBuild = false 时生效，打包时需要的模块, local.properties 内若配置会替换当前配置
    needPackage = []

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    ab = properties.getProperty("allBuild")
    if (ab != null) { allBuild = ab.toBoolean() }
    ip = properties.getProperty("ignorePackage")
    if (ip != null) {
        ignorePackage.clear()
        ignorePackage.addAll(ip.split(","))
    }
    np = properties.getProperty("needPackage")
    if (np != null) {
        needPackage.clear()
        needPackage.addAll(np.split(","))
    }
}

task("module") {
    def modules = getSubprojects()
    project("app") { p ->
        p.afterEvaluate {
            println "==============================================================="
            println " 打包版本：" + appVersionName
            println " 全功能打包：" + allBuild
            println " "
            modules.each() { module ->
                if (module != p && module.name != "lib_core") {
                    if (allBuild) {
                        if (ignorePackage.contains(module.name) && module.name != "lib_component") {
                            println " 全功能打包，不添加的模块: " + module.name
                        } else {
                            println " 全功能打包，已添加模块(all build): " + module.name
                            p.dependencies.add("implementation", project(module.path))
                        }
                    } else {
                        if (needPackage.contains(module.name) || module.name == "lib_component") {
                            println " 部分功能打包，已添加模块: " + module.name
                            p.dependencies.add("implementation", project(module.path))
                        } else {
                            println " 部分功能打包，不添加的模块: " + module.name
                        }
                    }
                }
            }
            println "==============================================================="
        }
    }
}